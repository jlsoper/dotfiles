#  $HOME/.bash_git

########################################
#
#  git fetch -p
#  git reset --soft HEAD~1 (better)
#  git reset --hard HEAD~1
#
#  alias gconfig-helper='git config --global credential.helper store'
#
#
## git push <remote> <branch>
#
#  git pull  origin   main
#  git push  origin   main
#
########################################

#####  toggle variable for git diff / difftool
GDIFF_STRING=diff

gdstring() { if [ "$GDIFF_STRING" = "diff" ]; then GDIFF_STRING="difftool" ; else GDIFF_STRING="diff" ; fi ; echo $GDIFF_STRING ; }



alias gadd='git add -A'
alias gbranch='git branch -a'
      gcheckout() { if [ -n "$1" ]; then git checkout -- "$1" ; else echo "usage: $FUNCNAME <fileName>" ; fi }
alias gclean='git clean -i'
alias gclean-show='git clean -d -n'
alias gcommit='git commit -m "$(date +%a) $(date +%D) $(date +%R) -- $(hostname) \ $USER"'
alias gconfig='git config --list --show-origin'
      gdel() { if [ -n "$1" ]; then git reset "$1" ; else echo "usage: $FUNCNAME <fileName>" ; fi }

alias gdiff='git difftool'
      gdiffB() { if [ -n "$2" ]; then git "$GDIFF_STRING" "$1".."$2" ; else echo "usage: $FUNCNAME <branch1> <branch2>" ; fi }  # for branch in remote repo, use syntax 'origin/branch2'
      gdiffC() { if [ -n "$2" ]; then git "$GDIFF_STRING" "$1".."$2" ; else echo "usage: $FUNCNAME <parent-SHA> <child-SHA>" ; fi }
      gdiffF() { if [ -n "$3" ]; then git difftool "$1".."$2" -- "$3" ; else echo -e "usage: $FUNCNAME <branch1> <branch2> <file>\n -- OR --\nusage: $FUNCNAME <parent-SHA> <child-SHA> <file>" ; fi }  # compare file across branches or commits
alias gdifftools='git difftool --tool-help'

alias glog='git --no-pager log --reverse --oneline'
alias glogs='git --no-pager log --reverse'

      gpull() { if [ -n "$1" ]; then git pull origin "$1" ; else echo "usage: $FUNCNAME <branch>" ; fi }
      gpush() { if [ -n "$1" ]; then git push origin "$1" ; else echo "usage: $FUNCNAME <branch>" ; fi }

alias grollback='git reset --soft HEAD~1'
alias gstatus='git status -s'



##### alias 2 function #####


alias gclone-branch='__gclone_branch'
alias gdiff-sa='__gdiff_sa'


alias wget-gha='__wget_gha'
alias wget-ghf='__wget_ghf'


alias wget-gla='__wget_gla'
alias wget-glf='__wget_glf'


      __gclone_branch() { if [ -n "$2" ]; then git clone -b "$1" --single-branch "$2" ; else echo "usage: gclone-branch <branch> <remoteRepoURL>" ; fi }
      __gdiff_sa() { git "$GDIFF_STRING" --staged "$@" ; }


      __wget_gha() { if [ -n "$2" ]; then wget "https://github.com/$1/$2/archive/main.zip" ; else echo "usage: wget-gha <userID> <repo>" ; fi }
      __wget_ghf() { if [ -n "$4" ]; then wget "https://raw.githubusercontent.com/$1/$2/$3/$4" ; else echo "usage: wget-ghf <userID> <repo> <branch> <fileName>" ; fi }


      __wget_gla() { if [ -n "$2" ]; then wget "https://gitlab.com/$1/$2/-/archive/main/$2-main.zip" ; else echo "usage: wget-gla <userID> <repo>" ; fi }
      __wget_glf() { if [ -n "$4" ]; then wget "https://gitlab.com/$1/$2/-/raw/$3/$4" ; else echo "usage: wget-glf <userID> <repo> <branch> <fileName>" ; fi }


