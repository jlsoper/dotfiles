#  $HOME/.bash_fcn


# functions - end with semicolon or newline
 bkup() { if [ -n "$1" ]; then cp "$1" "$1".`date +%Y-%m-%d_%H%M` ; else echo "usage: $FUNCNAME <file>" ; fi }  # date +%Y-%m-%d_%H%M%S
 dos2u() { perl -pi -e 's/\r\n/\n/' "$1" ; }
 dvd-split() { split -d -b 4G "$1" "$1". ; }
 dvd-unsplit() { cat "$1".* > "$1" ; }

# diskutil list
# diskutil erasedisk FILE_SYSTEM DISK_NAME DISK_IDENTIFIER
 exfat_create() { if [ -n "$2" ]; then diskutil erasedisk ExFAT "$1" MBRFormat "$2" ; else echo "usage: $FUNCNAME <label> <disk#>" ; fi }

 fbookmarks-clean() { if [ -n "$1" ]; then perl -pi -e 's/.ADD_DATE[^>]*//' "$1" ; else echo "usage: $FUNCNAME <bookmarks.html>" ; fi }
 fsplit() { split -a 3 -d -l "$1" "$2" "$2". ; }
 ftype() { grep -c $'\r' "$1" ; }
 lowerCase() { tr "[:upper:]" "[:lower:]" < "$1" > .tempFile ; mv -f .tempFile "$1" ; }
 mprint() { man "$1" | col -b | expand -t 2 > /tmp/"$1".man ; }

 pkg-cask-install() { brew install   --cask "$@" ; }
 pkg-cask-remove()  { brew uninstall --cask "$@" ; }

 pkg-update()  { brew update ; }
 pkg-install() { brew install   "$@" ; }  # echo "$@"
 pkg-remove()  { brew uninstall "$@" ; }  # echo "$@"
 pkg-upgrade() { if [ "$1" = "yes" ]; then brew upgrade ; else echo "usage: $FUNCNAME <yes>" ; fi }

 pkg-cleanup() { brew cleanup "$@" ; }
 pkg-list-installed() { brew list ; }
 pkg-outdated() { brew outdated "$@" ; }
 pkg-repolist() { brew tap ; }
 pkg-show() { brew info "$@" ; }


 removeCRchar() { tr -d '\r' < "$1" > .tempFile ; mv -f .tempFile "$1" ; }
 removeNPchar() { tr -cd '\11\12\15\40-\176' < "$1" > .tempFile ; mv -f .tempFile "$1" ; }
 rlogin() { ssh "$1"@"$2" ; }
 rtext() { cat "$1" | fold -95 -s > "$1".text ; }
 sha256() { if [ -n "$1" ]; then shasum -c "$1" ; else echo "usage: $FUNCNAME <file.sha256>" ; fi }

 tar-x()    { if [ -n "$1" ]; then tar -xvvf  "$1" ; else echo "usage: $FUNCNAME <archive.tar> ." ; fi }
 tbunzip2() { if [ -n "$1" ]; then tar -xvvjf "$1" ; else echo "usage: $FUNCNAME <archive.tar.bz2> ." ; fi }
 tgunzip()  { if [ -n "$1" ]; then tar -xvvzf "$1" ; else echo "usage: $FUNCNAME <archive.tar.gz> ." ; fi }

 u2dos() { perl -pi -e 's/\n/\r\n/' "$1" ; }
 upperCase() { tr "[:lower:]" "[:upper:]" < "$1" > .tempFile ; mv -f .tempFile "$1" ; }
 wifi-pwd() { if [ -n "$1" ]; then security find-generic-password -ga "$1" | grep "password:" ; else echo "usage: $FUNCNAME <SSID>" ; fi }
 xlogin() { ssh -X "$1"@"$2" ; }

 7unzip() { if [ -n "$1" ]; then 7z x -t7Z $1 -o. ; else echo "usage: $FUNCNAME <archive.7Z> ." ; fi }

