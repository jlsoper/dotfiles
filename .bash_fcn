#  $HOME/.bash_fcn


# functions - end with semicolon or newline
 bkup() { if [ -n "$1" ]; then cp "$1" "$1".`date +%Y-%m-%d_%H%M` ; else echo "usage: $FUNCNAME <file>" ; fi }  # date +%Y-%m-%d_%H%M%S

# C / C++ compiler with debug information (lldb)
 build_c()   { if [ -n "$1" ]; then TRIMMED=$(echo "$1" | cut -f 1 -d '.') ; clang   -g "$1" -o $TRIMMED ; unset TRIMMED ; else echo "usage: $FUNCNAME <file.c>"   ; fi }  # a.out
 build_cpp() { if [ -n "$1" ]; then TRIMMED=$(echo "$1" | cut -f 1 -d '.') ; clang++ -g "$1" -o $TRIMMED ; unset TRIMMED ; else echo "usage: $FUNCNAME <file.cpp>" ; fi }  # a.out

 dos2u() { if [ -n "$1" ]; then perl -pi -e 's/\r\n/\n/' "$1" ; else echo "usage: $FUNCNAME <file>" ; fi }

 dsize() { if [ -n "$1" ]; then du -khs "$1" ; else echo "usage: $FUNCNAME <directory>" ; fi }

 dvd_split() { split -d -b 4G --verbose "$1" "$1". ; }
 dvd_unsplit() { cat "$1".* > "$1" ; }

# exfat - /dev/sdb1
#### exfat_create() { if [ -n "$2" ]; then sudo mkfs.exfat -n "$1" "$2" ; else echo "usage: $FUNCNAME <label> <device ID>" ; fi }
#### exfat_verify() { if [ -n "$1" ]; then sudo fsck.exfat "$1" ; else echo "usage: $FUNCNAME <device ID>" ; fi }

 fbookmarks_clean() { if [ -n "$1" ]; then perl -pi -e 's/.ADD_DATE[^>]*//' "$1" ; else echo "usage: $FUNCNAME <bookmarks.html>" ; fi }

# --fixed-strings  (search)
 fgrep() { if [ -n "$1" ]; then find . -maxdepth 1 -type f -name "*" -exec grep -HIn --color=auto "$1" {} \; ; else echo "usage: $FUNCNAME \"string\"" ; fi }

 lowerCase() { tr "[:upper:]" "[:lower:]" < "$1" > .tempFile ; mv -f .tempFile "$1" ; }
 md5() { if [ -n "$1" ]; then md5sum -c "$1" ; else echo "usage: $FUNCNAME <file.md5>" ; fi }  # md5 mini.iso.md5

###  mount a filesystem
 mnt_hfs() { sudo hfsfuse /dev/da0s1 /mnt/usb/ ; }
 mnt_iso() { if [ -n "$1" ]; then sudo mdconfig -a -t vnode -f "$1" -u 1 ; sudo mount -t cd9660 /dev/md1 /mnt/iso ; else echo "usage: $FUNCNAME <file.iso>" ; fi }
 mnt_usb() { sudo mount.exfat-fuse /dev/da1s1 /mnt/usb/ ; }


 mprint() { if [ -n "$1" ]; then man "$1" | col -b | expand -t 2 > /tmp/"$1".man ; else echo "usage: $FUNCNAME <command>" ; fi }

 removeCRchar() { tr -d '\r' < "$1" > .tempFile ; mv -f .tempFile "$1" ; }
 removeNPchar() { tr -cd '\11\12\15\40-\176' < "$1" > .tempFile ; mv -f .tempFile "$1" ; }

 rlogin() { if [ -n "$2" ]; then ssh "$1"@"$2" ; else echo "usage: $FUNCNAME <userID> <host>" ; fi }

 rtext() { if [ -n "$1" ]; then cat "$1" | fold -95 -s > "$1".text ; else echo "usage: $FUNCNAME <file>" ; fi }
 setEnetCard() { sudo ifconfig alc0  192.168."$1" netmask 255.255.255.0 broadcast 192.168."$1" ; }
 setWifiCard() { sudo ifconfig wlan0 192.168."$1" netmask 255.255.255.0 broadcast 192.168."$1" ; }
 sha256() { if [ -n "$1" ]; then sha256sum -c "$1" ; else echo "usage: $FUNCNAME <file.sha256>" ; fi }
 sha512() { if [ -n "$1" ]; then sha512sum -c "$1" ; else echo "usage: $FUNCNAME <file.sha512>" ; fi }

 trim_ws() { for f in *; do mv "$f" $(echo $f | tr -d ' ') ; done }

 u2dos() { if [ -n "$1" ]; then perl -pi -e 's/\n/\r\n/' "$1" ; else echo "usage: $FUNCNAME <file>" ; fi }

###  unmount filesystems
 umnt_iso() { sudo umount /mnt/iso/ ; sudo mdconfig -du 1 ; }
 umnt_usb() { sudo umount /mnt/usb/ ; }


 upperCase() { tr "[:lower:]" "[:upper:]" < "$1" > .tempFile ; mv -f .tempFile "$1" ; }

# usermod -aG sudo userID
# ps -fu userID
 user_add() { if [ -n "$1" ]; then sudo adduser "$1" ; else echo "usage: $FUNCNAME <userID>" ; fi }                # /etc/adduser.conf
 user_del() { if [ -n "$1" ]; then sudo deluser --remove-home "$1" ; else echo "usage: $FUNCNAME <userID>" ; fi }  # /etc/deluser.conf
 user_switch() { if [ -n "$1" ]; then su -l "$1" ; else echo "usage: $FUNCNAME <userID>" ; fi }


# vsc() { if [ -n "$1" ]; then /opt/VSCode/bin/codium  --extensions-dir ~/.config/vscodevim/extensions  --user-data-dir $HOME/.config/vscodevim/user-data "$1" &> /dev/null ; else echo "usage: $FUNCNAME <file>" ; fi }


 xlogin() { if [ -n "$2" ]; then ssh -X "$1"@"$2" ; else echo "usage: $FUNCNAME <userID> <host>" ; fi }

 xml_format() { if [ -n "$1" ]; then perl -pi -e 's/\x3c/\n\x3c/g' "$1" ; tail -n +2 "$1" > .tempFile ; mv -f .tempFile "$1" ; else echo "usage: $FUNCNAME <file.xml>" ; fi }  # < character

