#  $HOME/.bash_fcn


# functions - end with semicolon or newline
 bkup() { if [ -n "$1" ]; then cp "$1" "$1".`date +%Y-%m-%d_%H%M` ; else echo "usage: $FUNCNAME <file>" ; fi }  # date +%Y-%m-%d_%H%M%S

 compiler-c()   { if [ -n "$1" ]; then TRIMMED=$(echo "$1" | cut -f 1 -d '.') ; gcc "$1" -o $TRIMMED ; unset TRIMMED ; else echo "usage: $FUNCNAME <file.c>"   ; fi }  # a.out
 compiler-cpp() { if [ -n "$1" ]; then TRIMMED=$(echo "$1" | cut -f 1 -d '.') ; g++ "$1" -o $TRIMMED ; unset TRIMMED ; else echo "usage: $FUNCNAME <file.cpp>" ; fi }  # a.out

 dos2u() { if [ -n "$1" ]; then perl -pi -e 's/\r\n/\n/' "$1" ; else echo "usage: $FUNCNAME <file>" ; fi }

 dvd_split() { split -d -b 4G "$1" "$1". ; }
 dvd_unsplit() { cat "$1".* > "$1" ; }

# diskutil list
# diskutil erasedisk FILE_SYSTEM DISK_NAME DISK_IDENTIFIER
 exfat_create() { if [ -n "$2" ]; then diskutil erasedisk ExFAT "$1" MBRFormat "$2" ; else echo "usage: $FUNCNAME <label> <disk#>" ; fi }

 fbookmarks_clean() { if [ -n "$1" ]; then perl -pi -e 's/.ADD_DATE[^>]*//' "$1" ; else echo "usage: $FUNCNAME <bookmarks.html>" ; fi }

# --fixed-strings  (search)
 fgrep() { if [ -n "$1" ]; then find . -maxdepth 1 -type f -name "*" -exec grep -HIn --color=auto "$1" {} \; ; else echo "usage: $FUNCNAME \"string\"" ; fi }

 fsplit() { split -a 3 -d -l "$1" "$2" "$2". ; }
 ftype() { grep -c $'\r' "$1" ; }

 gedit() { if [ -n "$1" ]; then open -e "$1" ; else echo "usage: $FUNCNAME <file>" ; fi }  # TextEdit

 lowerCase() { tr "[:upper:]" "[:lower:]" < "$1" > .tempFile ; mv -f .tempFile "$1" ; }
 mprint() { man "$1" | col -b | expand -t 2 > /tmp/"$1".man ; }

 removeCRchar() { tr -d '\r' < "$1" > .tempFile ; mv -f .tempFile "$1" ; }
 removeNPchar() { tr -cd '\11\12\15\40-\176' < "$1" > .tempFile ; mv -f .tempFile "$1" ; }

 rlogin() { if [ -n "$2" ]; then ssh "$1"@"$2" ; else echo "usage: $FUNCNAME <userID> <host>" ; fi }

 rtext() { if [ -n "$1" ]; then cat "$1" | fold -95 -s > "$1".text ; else echo "usage: $FUNCNAME <file>" ; fi }
 sha256() { if [ -n "$1" ]; then shasum -a 256 -c "$1" ; else echo "usage: $FUNCNAME <file.sha256>" ; fi }
 sha512() { if [ -n "$1" ]; then shasum -a 512 -c "$1" ; else echo "usage: $FUNCNAME <file.sha512>" ; fi }

 u2dos() { if [ -n "$1" ]; then perl -pi -e 's/\n/\r\n/' "$1" ; else echo "usage: $FUNCNAME <file>" ; fi }

 upperCase() { tr "[:lower:]" "[:upper:]" < "$1" > .tempFile ; mv -f .tempFile "$1" ; }

# WLAN - $USER
 wifi_info()   { airport -I ; }
 wifi_passwd() { if [ -n "$1" ]; then security find-generic-password -ga "$1" | grep "password:" ; else echo "usage: $FUNCNAME <SSID>" ; fi }
 wifi_scan()   { airport -s ; }

 xlogin() { ssh -X "$1"@"$2" ; }

 xml_format() { if [ -n "$1" ]; then perl -pi -e 's/\x3c/\n\x3c/g' "$1" ; tail -n +2 "$1" > .tempFile ; mv -f .tempFile "$1" ; else echo "usage: $FUNCNAME <file.xml>" ; fi }  # < character

