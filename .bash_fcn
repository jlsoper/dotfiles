#  $HOME/.bash_fcn

#  sleep 5s - wait 5 seconds (s,m,h,d)

# functions - end with semicolon or newline
 copy() { cp "$1" "$1".bak.txt ; }
 dos2u() { perl -pi -e 's/\r\n/\n/' "$1" ; }
 dvd-split() { split -d -b 4G --verbose "$1" "$1". ; }
 dvd-unsplit() { cat "$1".* > "$1" ; }
 fbookmarks-clean() { if [ -n "$1" ]; then perl -pi -e 's/.ADD_DATE[^>]*//' "$1" ; else echo "usage: $FUNCNAME <bookmarks.html>" ; fi }
 fsplit() { split -a 3 -d -l "$1" "$2" "$2". ; }
 ftype() { grep -c $'\r' "$1" ; }
 lowerCase() { tr "[:upper:]" "[:lower:]" < "$1" > .tempFile ; mv -f .tempFile "$1" ; }
 md5() { if [ -n "$1" ]; then md5sum -c "$1" ; else echo "usage: $FUNCNAME <file.md5>" ; fi }  # md5 mini.iso.md5
 mprint() { man "$1" | col -b | expand -t 2 > /tmp/"$1".man ; }

 pkg-history_install() { grep -I "installed" /var/log/pacman.log |tr -d "[ALPM]" ; }
 pkg-history_upgrade() { grep -I "upgraded"  /var/log/pacman.log |tr -d "[ALPM]" ; }
 pkg-history_remove()  { grep -I "removed"   /var/log/pacman.log |tr -d "[ALPM]" ; }
 pkg-list-installed() { pacman -Q ; }
 pkg-names() { pacman -Qq ; }
 pkg-orphans() { pacman -Qdt ; }
 pkg-repolist() { cat /etc/pacman.conf |grep "^\[" |tail -n+2 ; }
 pkg-search() { if [ -n "$1" ]; then pacman -Ss "$1" ; else echo "usage: $FUNCNAME <query>" ; fi }
 pkg-show() { if [ -n "$1" ]; then pacman -Si "$1" ; else echo "usage: $FUNCNAME <package>" ; fi }
 pkg-servers() { cat /etc/pacman.d/mirrorlist |grep "^Server" ; }

 removeCRchar() { tr -d '\r' < "$1" > .tempFile ; mv -f .tempFile "$1" ; }
 removeNPchar() { tr -cd '\11\12\15\40-\176' < "$1" > .tempFile ; mv -f .tempFile "$1" ; }
 rlogin() { ssh "$1"@"$2" ; }
 rtext() { cat "$1" | fold -95 -s > "$1".text ; }
 setNcard() { sudo ifconfig enp6s0 192.168."$1" netmask 255.255.255.0 broadcast 192.168."$1" ; }
 setWcard() { sudo ifconfig wlp7s0 192.168."$1" netmask 255.255.255.0 broadcast 192.168."$1" ; }
 sha256() { if [ -n "$1" ]; then sha256sum -c "$1" ; else echo "usage: $FUNCNAME <file.sha256>" ; fi }
 tar-x() { tar -xvvf "$1" -C "$2" ; }
 tbunzip2() { tar -xvvjf "$1" -C "$2" ; }
 tgunzip() { tar -xvvzf "$1" -C "$2" ; }
 u2dos() { perl -pi -e 's/\n/\r\n/' "$1" ; }
 upperCase() { tr "[:lower:]" "[:upper:]" < "$1" > .tempFile ; mv -f .tempFile "$1" ; }
 vbox-ext-install() { if [ -n "$1" ]; then sudo VBoxManage extpack install "$1" ; else echo "usage: $FUNCNAME <file.vbox-extpack>" ; fi }
 wconnect() { nmcli dev wifi connect "$1" password "$2" ; }  # ESSID_NAME ESSID_PASSWORD

#  Github
 wget-gha() { if [ -n "$2" ]; then wget "https://github.com/$1/$2/archive/main.zip" ; else echo "usage: $FUNCNAME <userID> <repo>" ; fi }
 wget-ghf() { if [ -n "$1" ]; then wget "https://raw.githubusercontent.com/"$1 ; else echo "usage: $FUNCNAME userID/repo/branch/fileName" ; fi }

 xlogin() { ssh -X "$1"@"$2" ; }

 7unzip() { if [ -n "$2" ]; then 7z x -t7Z $1 -o$2 ; else echo "usage: $FUNCNAME <archive> <path>" ; fi }

